{"version":3,"sources":["../src/wallet-balance/get-walletBalance.ts","../src/index.ts"],"sourcesContent":["import dayjs from 'dayjs'\nimport { PrismaClient } from '@prisma/client'\nimport { v4 } from 'uuid'\n\nexport const getWalletBalance = async () => {\n    try{\n        const res = await fetch('https://explorer.consensus.mainnet.lukso.network/api/v1/execution/address/0xc92F4b3905754eA8E49Ea9B4B698d40825eF2743', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        const result = await res.json();\n        return result\n    }\n\n    catch (err) {\n        console.log(err)\n        return null\n    }\n}\n\nexport const saveWalletBalanceAndPersist = async () => {\n    const res = await getWalletBalance()\n    if (res !== null) {\n        const address: string = res.data.address\n        const amount: number = parseFloat(res.data.ether)\n        const creationDate = dayjs().toISOString()\n        const data = {address, creationDate, amount}\n        console.log(data)\n\n        const prisma = new PrismaClient()\n        const uuid = () => v4()\n\n        await prisma.luksoData.create({\n            data: {\n                id: uuid(),\n                address: address,\n                creationDate: creationDate,\n                amount: amount\n            },\n        })\n\n    }\n    else {\n        return null\n    }\n}","const express = require(\"express\");\nconst app = express();\n\nimport { saveWalletBalanceAndPersist } from './wallet-balance/get-walletBalance'\n\nconst main = async () => {\n  const app = express()\n\n  const setImmediateDeleteInterval = (callback: () => void, interval: number) => {\n    callback() //used that the first result is received at time 0s (instead of the defined number in the interval)\n    setInterval(callback, interval)\n  }\n\n  setImmediateDeleteInterval(async () => {\n\n    await saveWalletBalanceAndPersist()\n    console.log('Data saved')\n\n  }, 1000 * 60 * 60 * 24)\n\n  app.get(\"/\", (req:any, res:any) => res.send(\"OK\"))\n\n  app.listen(4000, () => {\n    console.log(`Server started at: http://localhost:4000`)\n  })\n}\n\nmain()"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mBAAkB;AAClB,oBAA6B;AAC7B,kBAAmB;AAEZ,IAAM,mBAAmB,MAAY;AACxC,MAAG;AACC,UAAM,MAAM,MAAM,MAAM,wHAAwH;AAAA,MAC5I,QAAQ;AAAA,MACR,SAAS;AAAA,QACL,gBAAgB;AAAA,MACpB;AAAA,IACJ,CAAC;AACD,UAAM,SAAS,MAAM,IAAI,KAAK;AAC9B,WAAO;AAAA,EACX,SAEO,KAAK;AACR,YAAQ,IAAI,GAAG;AACf,WAAO;AAAA,EACX;AACJ;AAEO,IAAM,8BAA8B,MAAY;AACnD,QAAM,MAAM,MAAM,iBAAiB;AACnC,MAAI,QAAQ,MAAM;AACd,UAAM,UAAkB,IAAI,KAAK;AACjC,UAAM,SAAiB,WAAW,IAAI,KAAK,KAAK;AAChD,UAAM,mBAAe,aAAAA,SAAM,EAAE,YAAY;AACzC,UAAM,OAAO,EAAC,SAAS,cAAc,OAAM;AAC3C,YAAQ,IAAI,IAAI;AAEhB,UAAM,SAAS,IAAI,2BAAa;AAChC,UAAM,OAAO,UAAM,gBAAG;AAEtB,UAAM,OAAO,UAAU,OAAO;AAAA,MAC1B,MAAM;AAAA,QACF,IAAI,KAAK;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EAEL,OACK;AACD,WAAO;AAAA,EACX;AACJ;;;AC/CA,IAAM,UAAU,QAAQ,SAAS;AACjC,IAAM,MAAM,QAAQ;AAIpB,IAAM,OAAO,MAAY;AACvB,QAAMC,OAAM,QAAQ;AAEpB,QAAM,6BAA6B,CAAC,UAAsB,aAAqB;AAC7E,aAAS;AACT,gBAAY,UAAU,QAAQ;AAAA,EAChC;AAEA,6BAA2B,MAAY;AAErC,UAAM,4BAA4B;AAClC,YAAQ,IAAI,YAAY;AAAA,EAE1B,IAAG,MAAO,KAAK,KAAK,EAAE;AAEtB,EAAAA,KAAI,IAAI,KAAK,CAAC,KAAS,QAAY,IAAI,KAAK,IAAI,CAAC;AAEjD,EAAAA,KAAI,OAAO,KAAM,MAAM;AACrB,YAAQ,IAAI,0CAA0C;AAAA,EACxD,CAAC;AACH;AAEA,KAAK;","names":["dayjs","app"]}